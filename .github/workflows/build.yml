name: build

# TODO: release build, versioning, package manager support

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_debug_sanitize:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: fetch dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y catch2
    - name: build
      run: |
        mkdir -p build
        cd build
        cmake -DHULA_DEMOS=ON -DHULA_SANITIZE=ON ..
        make
    - name: test
      run: |
        cd build
        ctest --output-junit unit_test_results.xml --output-on-failure
    - name: upload test results to codecov
      if: ${{ !cancelled() }}
      uses: codecov/test-results-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  build_coverage:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: fetch dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y catch2 lcov
    - name: build
      run: |
        mkdir -p build
        cd build
        cmake -DHULA_DEMOS=ON -DHULA_COVERAGE=ON ..
        make
    - name: test
      run: |
        cd build
        ctest --output-junit unit_test_results.xml --output-on-failure
    - name: upload test results to codecov
      if: ${{ !cancelled() }}
      uses: codecov/test-results-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
    - name: generate coverage
      run: |
        lcov --capture --directory build --output-file coverage.info
        lcov --remove coverage.info '/usr/*' 'tests/*' --output-file coverage_filtered.info
        genhtml coverage_filtered.info --output-directory coverage_report --verbose
    - name: upload coverage report as artifact
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage_report
    - uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  build_release:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: fetch dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y catch2
    - name: build
      run: |
        mkdir -p build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release -DHULA_DEMOS=ON ..
        make
    - name: test
      run: |
        cd build
        ctest --output-junit unit_test_results.xml --output-on-failure
    - name: upload test results to codecov
      if: ${{ !cancelled() }}
      uses: codecov/test-results-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

